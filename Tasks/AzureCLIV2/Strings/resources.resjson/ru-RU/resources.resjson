{
  "loc.friendlyName": "Azure CLI",
  "loc.helpMarkDown": "[Learn more about this task](http://github.com/microsoft/azure-pipelines-tasks/blob/master/Tasks/AzureCLIV2/Readme.md) or [see the Azure CLI documentation](https://docs.microsoft.com/cli/azure/)",
  "loc.description": "Run Azure CLI commands against an Azure subscription in a PowerShell Core/Shell script when running on Linux agent or PowerShell/Powershell Core/Batch script when running on Windows agent.",
  "loc.instanceNameFormat": "Azure CLI $(scriptPath)",
  "loc.releaseNotes": "What's new in Version 2.0:\n- Support for PowerShell and PowerShell Core script. \n- PowerShell Core works with cross-platform agents (Linux, macOS, or Windows), make sure the agent has PowerShell version 6 or more. \n- Powershell script works with only Windows agent, make sure the agent has PowerShell version 5 or below.",
  "loc.group.displayName.advanced": "Дополнительно",
  "loc.input.label.connectedServiceNameARM": "Azure Resource Manager connection",
  "loc.input.help.connectedServiceNameARM": "Select an Azure Resource Manager service connection for the deployment",
  "loc.input.label.scriptType": "Тип сценария",
  "loc.input.help.scriptType": "Type of script: PowerShell/PowerShell Core/Bat/Shell script. Select Shell/PowerShell Core script when running on Linux agent or Batch/PowerShell/PowerShell Core script when running on Windows agent. PowerShell Core script can run on cross-platform agents (Linux, macOS, or Windows).",
  "loc.input.label.scriptLocation": "Расположение сценария",
  "loc.input.help.scriptLocation": "Path to script: File path or Inline script",
  "loc.input.label.scriptPath": "Путь к скрипту",
  "loc.input.help.scriptPath": "Fully qualified path of the script(.ps1 or .bat or .cmd when using Windows based agent else .ps1 or .sh when using linux based agent) or a path relative to the the default working directory",
  "loc.input.label.inlineScript": "Встроенный скрипт",
  "loc.input.help.inlineScript": "You can write your scripts inline here. When using Windows agent, use PowerShell or PowerShell Core or batch scripting whereas use PowerShell Core or shell scripting when using Linux based agents. For batch files use the prefix \"call\" before every azure command. You can also pass predefined and custom variables to this script using arguments \n\n example for PowerShell/PowerShellCore/shell: \naz --version \naz account show \n\n example for batch:\ncall  az --version \ncall az account show",
  "loc.input.label.scriptArguments": "Аргументы скрипта",
  "loc.input.help.scriptArguments": "Аргументы, переданные в сценарий",
  "loc.input.label.powerShellErrorActionPreference": "ErrorActionPreference",
  "loc.input.help.powerShellErrorActionPreference": "Prepends the line `$ErrorActionPreference = 'VALUE'` at the top of your powershell/powershell core script.",
  "loc.input.label.addSpnToEnvironment": "Доступ к сведениям о субъекте-службе в скрипте",
  "loc.input.help.addSpnToEnvironment": "Adds service principal id, service principal key and tenant id of the Azure endpoint you chose to the script's execution environment. You can use variables: `servicePrincipalId`, `servicePrincipalKey` and `tenantId` in your script.\n\nThis is honored only when the Azure endpoint has Service Principal authentication scheme.\n\nSyntax to access environment variables based on script type.\n\nPowershell script: $env:servicePrincipalId\n\nBatch script: %servicePrincipalId% \n\nShell script: $servicePrincipalId",
  "loc.input.label.useGlobalConfig": "Использовать глобальную конфигурацию Azure CLI",
  "loc.input.help.useGlobalConfig": "Если задано значение false, задача будет использовать собственный отдельный [каталог конфигурации Azure CLI](https://docs.microsoft.com/en-us/cli/azure/azure-cli-configuration?view=azure-cli-latest#cli-configuration-file). Это можно использовать для выполнения задач Azure CLI в *параллельных* выпусках",
  "loc.input.label.cwd": "Рабочий каталог",
  "loc.input.help.cwd": "Текущий рабочий каталог, в котором выполняется сценарий. Если значение пустое, используется корень репозитория (сборки) или артефакты (выпуска): $(System.DefaultWorkingDirectory).",
  "loc.input.label.failOnStandardError": "Сбой со стандартной ошибкой",
  "loc.input.help.failOnStandardError": "Если задано значение true, то при наличии ошибок, записанных в стандартный поток ошибок, задача завершится сбоем. Снимите флажок, чтобы игнорировать стандартные ошибки и использовать коды завершения для определения состояния",
  "loc.input.label.powerShellIgnoreLASTEXITCODE": "Ignore $LASTEXITCODE",
  "loc.input.help.powerShellIgnoreLASTEXITCODE": "Если задано значение False, в конец скрипта добавляется строка \"if ((Test-Path -LiteralPath variable:\\LASTEXITCODE)) { exit $LASTEXITCODE }\". Это приведет к тому, что последний код выхода из внешней команды будет использоваться как код выхода PowerShell. В противном случае эта строка не добавляется в конец скрипта.",
  "loc.messages.ScriptReturnCode": "Выход из сценария с кодом возврата: %d",
  "loc.messages.ScriptFailed": "Сбой сценария с ошибкой: %s",
  "loc.messages.ScriptFailedStdErr": "Script has output to stderr. Failing as failOnStdErr is set to true.",
  "loc.messages.ScriptFailedWithExitCode": "Script failed with exit code: %d",
  "loc.messages.UnsupportedEndpointScheme": "Схема авторизации подключения к службе не поддерживается: субъект-служба для AzureRM",
  "loc.messages.AzureSDKNotFound": "На этом компьютере не установлен Azure CLI 2.x.",
  "loc.messages.FailedToLogout": "Во время выхода из системы произошла следующая ошибка: %s",
  "loc.messages.LoginFailed": "Не удалось войти в Azure",
  "loc.messages.MSILoginFailed": "Сбой входа Azure с использованием Управляемого удостоверения службы",
  "loc.messages.AuthSchemeNotSupported": "Схема проверки подлинности %s не поддерживается",
  "loc.messages.ErrorInSettingUpSubscription": "Ошибка при настройке подписки",
  "loc.messages.SettingAzureConfigDir": "Задание переменной среды AZURE_CONFIG_DIR: %s",
  "loc.messages.SettingAzureCloud": "Задание активного облака: %s",
  "loc.messages.JS_InvalidFilePath": "Script file could not be found at specified script location: '%s'. Please verify the script exists at the specified path. If you want to use inline script, specify input `Script Location` as `inlineScript`.",
  "loc.messages.JS_InvalidErrorActionPreference": "Недопустимое значение ErrorActionPreference \"%s\". Возможные значения: Stop, Continue или SilentlyContinue",
  "loc.messages.GlobalCliConfigAgentVersionWarning": "Для агента версии ниже 2.115.0 можно использовать только глобальную конфигурацию Azure CLI",
  "loc.messages.UnacceptedScriptLocationValue": "%s is not a valid value for task input 'Script Location' (scriptLocation in YAML). Value can either be'inlineScript' or 'scriptPath'"
}
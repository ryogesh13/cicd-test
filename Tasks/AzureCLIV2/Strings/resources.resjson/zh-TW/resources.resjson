{
  "loc.friendlyName": "Azure CLI",
  "loc.helpMarkDown": "[Learn more about this task](http://github.com/microsoft/azure-pipelines-tasks/blob/master/Tasks/AzureCLIV2/Readme.md) or [see the Azure CLI documentation](https://docs.microsoft.com/cli/azure/)",
  "loc.description": "Run Azure CLI commands against an Azure subscription in a PowerShell Core/Shell script when running on Linux agent or PowerShell/Powershell Core/Batch script when running on Windows agent.",
  "loc.instanceNameFormat": "Azure CLI $(scriptPath)",
  "loc.releaseNotes": "What's new in Version 2.0:\n- Support for PowerShell and PowerShell Core script. \n- PowerShell Core works with cross-platform agents (Linux, macOS, or Windows), make sure the agent has PowerShell version 6 or more. \n- Powershell script works with only Windows agent, make sure the agent has PowerShell version 5 or below.",
  "loc.group.displayName.advanced": "進階",
  "loc.input.label.connectedServiceNameARM": "Azure Resource Manager connection",
  "loc.input.help.connectedServiceNameARM": "Select an Azure Resource Manager service connection for the deployment",
  "loc.input.label.scriptType": "指令碼類型",
  "loc.input.help.scriptType": "Type of script: PowerShell/PowerShell Core/Bat/Shell script. Select Shell/PowerShell Core script when running on Linux agent or Batch/PowerShell/PowerShell Core script when running on Windows agent. PowerShell Core script can run on cross-platform agents (Linux, macOS, or Windows).",
  "loc.input.label.scriptLocation": "指令碼位置",
  "loc.input.help.scriptLocation": "Path to script: File path or Inline script",
  "loc.input.label.scriptPath": "指令碼路徑",
  "loc.input.help.scriptPath": "Fully qualified path of the script(.ps1 or .bat or .cmd when using Windows based agent else .ps1 or .sh when using linux based agent) or a path relative to the the default working directory",
  "loc.input.label.inlineScript": "內嵌指令碼",
  "loc.input.help.inlineScript": "You can write your scripts inline here. When using Windows agent, use PowerShell or PowerShell Core or batch scripting whereas use PowerShell Core or shell scripting when using Linux based agents. For batch files use the prefix \"call\" before every azure command. You can also pass predefined and custom variables to this script using arguments \n\n example for PowerShell/PowerShellCore/shell: \naz --version \naz account show \n\n example for batch:\ncall  az --version \ncall az account show",
  "loc.input.label.scriptArguments": "指令碼引數",
  "loc.input.help.scriptArguments": "傳遞給指令碼的引數",
  "loc.input.label.powerShellErrorActionPreference": "ErrorActionPreference",
  "loc.input.help.powerShellErrorActionPreference": "Prepends the line `$ErrorActionPreference = 'VALUE'` at the top of your powershell/powershell core script.",
  "loc.input.label.addSpnToEnvironment": "存取指令碼中的服務主體詳細資料",
  "loc.input.help.addSpnToEnvironment": "Adds service principal id, service principal key and tenant id of the Azure endpoint you chose to the script's execution environment. You can use variables: `servicePrincipalId`, `servicePrincipalKey` and `tenantId` in your script.\n\nThis is honored only when the Azure endpoint has Service Principal authentication scheme.\n\nSyntax to access environment variables based on script type.\n\nPowershell script: $env:servicePrincipalId\n\nBatch script: %servicePrincipalId% \n\nShell script: $servicePrincipalId",
  "loc.input.label.useGlobalConfig": "使用全域 Azure CLI 設定",
  "loc.input.help.useGlobalConfig": "如果此項目為 false，則此工作會使用其獨立的 [Azure CLI 設定目錄](https://docs.microsoft.com/zh-tw/cli/azure/azure-cli-configuration?view=azure-cli-latest#cli-configuration-file)。這個項目可在 *平行* 版本中用於執行 Azure CLI 工作",
  "loc.input.label.cwd": "工作目錄",
  "loc.input.help.cwd": "指令碼執行所在的現行工作目錄。Empty 是存放庫 (組建) 或成品 (發行) 的根目錄，即 $(System.DefaultWorkingDirectory)",
  "loc.input.label.failOnStandardError": "發生標準錯誤的失敗",
  "loc.input.help.failOnStandardError": "若此項目為 true，則當任何錯誤寫入 StandardError 串流時此工作將失敗。取消選取核取方塊可略過標準錯誤並根據結束代碼判斷狀態",
  "loc.input.label.powerShellIgnoreLASTEXITCODE": "Ignore $LASTEXITCODE",
  "loc.input.help.powerShellIgnoreLASTEXITCODE": "若此為 false，則會將 `if ((Test-Path -LiteralPath variable:\\LASTEXITCODE)) { exit $LASTEXITCODE }` 附加至您指令碼的結尾。如此會讓來自外部命令中的最後一個結束代碼，以 PowerShell 的結束代碼散佈。否則，不會將此行附加至您的指令碼結尾。",
  "loc.messages.ScriptReturnCode": "指令碼已結束。傳回碼: %d",
  "loc.messages.ScriptFailed": "指令碼失敗。錯誤: %s",
  "loc.messages.ScriptFailedStdErr": "Script has output to stderr. Failing as failOnStdErr is set to true.",
  "loc.messages.ScriptFailedWithExitCode": "Script failed with exit code: %d",
  "loc.messages.UnsupportedEndpointScheme": "不支援的服務連線授權配置: AzureRM 的服務主體",
  "loc.messages.AzureSDKNotFound": "此電腦上未安裝 Azure CLI 2.x。",
  "loc.messages.FailedToLogout": "登出時發生下列錯誤: %s",
  "loc.messages.LoginFailed": "Azure 登入失敗",
  "loc.messages.MSILoginFailed": "使用受控服務識別登入 Azure 失敗",
  "loc.messages.AuthSchemeNotSupported": "不支援驗證結構描述 %s",
  "loc.messages.ErrorInSettingUpSubscription": "設定訂用帳戶時發生錯誤",
  "loc.messages.SettingAzureConfigDir": "正在將 AZURE_CONFIG_DIR 環境變數設定為: %s",
  "loc.messages.SettingAzureCloud": "正在將作用中雲端設定為: %s",
  "loc.messages.JS_InvalidFilePath": "Script file could not be found at specified script location: '%s'. Please verify the script exists at the specified path. If you want to use inline script, specify input `Script Location` as `inlineScript`.",
  "loc.messages.JS_InvalidErrorActionPreference": "ErrorActionPreference '%s' 無效。此值必須是 'Stop'、'Continue' 或 'SilentlyContinue' 之一",
  "loc.messages.GlobalCliConfigAgentVersionWarning": "2.115.0 以下的代理程式版本只能使用全域 Azure CLI 設定",
  "loc.messages.UnacceptedScriptLocationValue": "%s is not a valid value for task input 'Script Location' (scriptLocation in YAML). Value can either be'inlineScript' or 'scriptPath'"
}
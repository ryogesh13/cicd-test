{
  "loc.friendlyName": "Use .NET Core",
  "loc.helpMarkDown": "[Learn more about this task](https://aka.ms/AA4xgy0)",
  "loc.description": "Получает определенную версию пакета SDK для .NET Core из Интернета или локального кэша и добавляет ее в PATH. Эта задача служит для изменения версии .NET Core, используемой в последующих задачах. Дополнительно обеспечивает поддержку прокси.",
  "loc.instanceNameFormat": "Использовать .NET Core $(packageType) $(version)",
  "loc.releaseNotes": "<li>Support for installing multiple versions side by side.</li><li>Support for patterns in version to fetch latest in minor/major version.</li><li>Restrict Multi-level lookup</li><li>Installs NuGet and provides proxy support.</li><li>Installs sdk versions from `global.json` file(s)</li>",
  "loc.group.displayName.advanced": "Дополнительно",
  "loc.input.label.packageType": "Пакет для установки",
  "loc.input.help.packageType": "Выберите, следует ли устанавливать только среду выполнения или пакет SDK.",
  "loc.input.label.useGlobalJson": "Use global json",
  "loc.input.help.useGlobalJson": "Select this option to install all SDKs from global.json files. These files are searched from system.DefaultWorkingDirectory. You can change the search root path by setting working directory input.",
  "loc.input.label.workingDirectory": "Рабочий каталог",
  "loc.input.help.workingDirectory": "Specify path from where global.json files should be searched when using `Use global json`. If empty, `system.DefaultWorkingDirectory` will be considered as the root path.",
  "loc.input.label.version": "Версия",
  "loc.input.help.version": "Specify version of .NET Core SDK or runtime to install.<br/>Versions can be given in the following formats<li>2.x   => Install latest in major version.</li><li>2.2.x => Install latest in major and minor version</li><li>2.2.104 => Install exact version</li><br/>Find the value of `version` for installing SDK/Runtime, from the releases.json. The link to releases.json of that major.minor version can be found in [**releases-index file.**](https://dotnetcli.blob.core.windows.net/dotnet/release-metadata/releases-index.json). Like link to releases.json for 2.2 version is https://dotnetcli.blob.core.windows.net/dotnet/release-metadata/2.2/releases.json",
  "loc.input.label.includePreviewVersions": "Включить предварительные версии",
  "loc.input.help.includePreviewVersions": "Выберите, нужно ли включать предварительные версии при поиске последних версий, например 2.2.x. Этот параметр игнорируется, если указана точная версия, например 3.0.100-preview3-010431",
  "loc.input.label.installationPath": "Путь для установки .NET Core",
  "loc.input.help.installationPath": "Укажите, где следует установить пакет SDK для .NET Core или среду выполнения. Различные пути могут оказывать соответствующее воздействие на поведение .NET.<li>$(Agent.ToolsDirectory): приведет к кэшированию версии на агенте, так как этот каталог не очищается между конвейерами. Все конвейеры, выполняющиеся на агенте, имеют доступ к версиям, ранее установленным с помощью этого агента.</li><li>$(Agent.TempDirectory): гарантирует, что конвейер не использует кэшированную версию .NET Core, так как эта папка очищается после каждого конвейера.</li><li>Любой другой путь: вы можете настроить любой другой путь, при условии, что процесс агента имеет доступ к нему. Это приведет к изменению состояния компьютера и повлияет на все выполняющиеся там процессы.<br/>Обратите внимание, что можно также использовать параметр многоуровневого поиска, который позволяет настроить проверку подходящей версии узлом .NET.",
  "loc.input.label.performMultiLevelLookup": "Выполнить многоуровневый поиск",
  "loc.input.help.performMultiLevelLookup": "Эти входные данные применимы только для агентов на основе Windows. Этот параметр настраивает поведение хост-процесса .NET для поиска подходящей общей платформы.<li>Флажок снят: хост-процесс будет просматривать только версии в папке, указанной в этой задаче.</li><li>Флажок установлен: хост-процесс попытается искать в предварительно определенных глобальных расположениях с использованием многоуровневого поиска.<br/>Глобальные расположения по умолчанию: <br/><b>Для Windows:</b><br/>C:\\Program Files\\dotnet (64-разрядные процессы)<br/>C:\\Program Files (x86)\\dotnet (32-разрядные процессы)</li> Дополнительные сведения см. [**здесь**](https://github.com/dotnet/core-setup/blob/master/Documentation/design-docs/multilevel-sharedfx-lookup.md).<br/>",
  "loc.messages.ToolFailed": "Сбой установки инструмента: %s",
  "loc.messages.ImplicitVersionNotSupported": "Следует указать допустимую и явную версию: %s",
  "loc.messages.getMachinePlatformFailed": "Не удалось получить сведения о платформе компьютера. Ошибка: %s.",
  "loc.messages.getDownloadUrlsFailed": "Не удалось получить URL-адреса для скачивания. Ошибка: %s.",
  "loc.messages.UsingCachedTool": "Есть кэшированная копия пакета .NET Core. Устанавливать пакет заново не нужно. Расположение кэшированного пакета: %s.",
  "loc.messages.CheckingToolCache": "Проверка наличия кэшированной копии для этой версии...",
  "loc.messages.InstallingAfresh": "Кэш не содержит запрошенной версии .NET Core. Идет ее скачивание и установка.",
  "loc.messages.GettingDownloadUrl": "Идет получение URL-адреса для скачивания версии %s .NET Core: %s.",
  "loc.messages.CouldNotDetectPlatform": "Не удалось определить ОС компьютера",
  "loc.messages.NullDownloadUrls": "Не удалось сформировать URL-адрес для скачивания. Убедитесь в том, что указанная версия %s допустима.",
  "loc.messages.DownloadingUrl": "Скачивается пакет .NET Core с URL-адреса: %s",
  "loc.messages.ExtractingPackage": "Распаковка скачанного пакета %s.",
  "loc.messages.CachingTool": "Кэширование установленного инструмента.",
  "loc.messages.SuccessfullyInstalled": "Пакет .NET Core %s версии %s успешно установлен.",
  "loc.messages.ToolToInstall": "Инструмент для установки: .NET Core %s версии %s.",
  "loc.messages.PrimaryPlatform": "Обнаружена платформа (основная): %s",
  "loc.messages.LegacyPlatform": "Обнаружена платформа (прежней версии): %s",
  "loc.messages.CouldNotDownload": "Не удалось скачать пакет установки с этого URL-адреса: %s. Ошибка: %s",
  "loc.messages.FailedToDownloadPackage": "Не удалось скачать пакет для установки",
  "loc.messages.PrependGlobalToolPath": "Создание глобального пути к средству и добавление его в начало PATH.",
  "loc.messages.VersionsFileMalformed": "Ссылки на скачивание для указанной версии неправильно сформированы в документе поддерживаемых версий => %s/",
  "loc.messages.MatchingVersionNotFound": "Не удалось найти соответствующую версию %s для указанной версии: %s. Обратите внимание, что предварительные версии учитываются при поиске последней версии, только если установлен флажок \"Включить предварительные версии\".",
  "loc.messages.UnableToAccessPath": "Unable to access path: %s. Error: %s. Please make sure that agent process has access to the path.",
  "loc.messages.VersionCanNotBeDownloadedFromUrl": "Версию %s не удается скачать по URL-адресу %s. Неверное значение URL-адреса или версии.",
  "loc.messages.CopyingFoldersIntoPath": "Копирование всех корневых папок в путь установки: %s",
  "loc.messages.CopyingFilesIntoPath": "Копирование корневых файлов (например, dotnet.exe) в путь установки: %s",
  "loc.messages.FailedToCopyTopLevelFiles": "Не удалось скопировать корневые файлы в путь установки: %s. Ошибка: %s",
  "loc.messages.FailedWhileInstallingVersionAtPath": "Сбой при установке версии: %s по пути: %s, ошибка: %s",
  "loc.messages.ExplicitVersionRequired": "Версия %s не разрешена. Устанавливаемые версии должны иметь формат: основной_номер.дополнительный_номер.версия_исправления. Например: 2.2.1",
  "loc.messages.VersionFoundInCache": "Версия %s найдена в кэше.",
  "loc.messages.VersionNotFoundInCache": "Версия %s не найдена в кэше.",
  "loc.messages.CreatingInstallationCompeleteFile": "Creating installation complete marker file for .Net core %s version %s",
  "loc.messages.CannotFindRuntimeVersionForCompletingInstallation": "Не удается найти версию среды выполнения для типа пакета: %s с версией: %s",
  "loc.messages.PathNotFoundException": "Не удалось найти путь: %s. Убедитесь, что он существует.",
  "loc.messages.VersionIsLocalLatest": "Версия %s является последней из версий, представленных по пути %s",
  "loc.messages.VersionIsNotLocalLatest": "Версия %s не является последней из версий, представленных в %s",
  "loc.messages.DownloadUrlForMatchingOsNotFound": "Не удалось найти URL-адрес скачивания для .NET Core %s версии %s для следующих платформ ОС (относительный идентификатор): %s",
  "loc.messages.ExceptionWhileDownloadOrReadReleasesIndex": "Failed to download or parse releases-index.json with error: %s",
  "loc.messages.MatchingVersionForUserInputVersion": "Найдена версия %s в канале %s для указанной пользователем спецификации версии: %s",
  "loc.messages.UrlForReleaseChannelNotFound": "Не удалось найти URL-адрес для releases.json версии канала: %s",
  "loc.messages.NoSuitableChannelWereFound": "Не удалось найти канал, соответствующий версии %s.",
  "loc.messages.DetectingPlatform": "Определение платформы ОС для поиска правильного загружаемого пакета ОС.",
  "loc.messages.FailedInDetectingMachineArch": "Сбой при определении платформы ОС компьютера, ошибка: %s",
  "loc.messages.runtimeVersionPropertyNotFound": "Не удалось найти свойство runtime-version для .NET Core %s версии %s.",
  "loc.messages.VersionNotFound": "Сопоставление версий %s: не удалось найти %s",
  "loc.messages.VersionNotAllowed": "Version %s is not allowed. Allowed version types are: majorVersion.x, majorVersion.minorVersion.x, majorVersion.minorVersion.patchVersion. More details: %s",
  "loc.messages.VersionsCanNotBeCompared": "Версии %s и %s невозможно сравнить. Обе версии должны быть явными.",
  "loc.messages.FileNameNotCorrectCompleteFileName": "File name %s is not a correct '.complete' file.",
  "loc.messages.ChannelVersionsNotComparable": "Версии канала %s и %s невозможно сравнить. Они должны иметь числовые основной и дополнительный номера версии.",
  "loc.messages.LookingForVersionInChannel": "Поиск версии в канале %s",
  "loc.messages.FallingBackToAdjacentChannels": "Не удалось найти версию %s в ее канале, сейчас будет выполнен поиск в смежных каналах.",
  "loc.messages.ErrorWhileSettingDotNetToolPath": "Сбой при добавлении пути к средствам .NET Core в начало переменной среды PATH. Ошибка: %s",
  "loc.messages.RequiredChannelVersionForSpec": "Поиск канала %s для версии %s",
  "loc.messages.ErrorWhileGettingVersionFromChannel": "Сбой при получении %s версии из канала %s, ошибка: %s",
  "loc.messages.ComparingInstalledFolderVersions": "Сравнение того, является ли устанавливаемая версия %s старше установленной версии с именем папки %s",
  "loc.messages.ComparingInstalledFileVersions": "Сравнение того, является ли устанавливаемая версия %s старше установленной версии с полным именем файла версии %s",
  "loc.messages.InvalidChannelObject": "Объект не может быть использован в качестве канала; отсутствуют обязательные свойства, такие как channel-version в releases.json.",
  "loc.messages.ReleasesIndexBodyIncorrect": "Неверный проанализированный текст индекса выпусков. Убедитесь, что раздел releases-index в файле не пуст.",
  "loc.messages.InvalidVersionObject": "Releases.json имеет выпуск с недопустимым объектом %s: %s",
  "loc.messages.InvalidVersion": "Invalid version specified %s",
  "loc.messages.FilesDataIsIncorrectInVersion": "В выпуске %s для версии %s приведены неправильные данные файла (возможно, отсутствуют обязательные поля, такие как name, rid и url): %s",
  "loc.messages.VersionFilesDataIncorrect": "Данные файлов версии отсутствуют или не содержат обязательные поля.",
  "loc.messages.VersionInformationNotComplete": "В файле releases.json указаны неполные обязательные сведения для версии %s. Ошибка: %s",
  "loc.messages.FailedWhileExtractingPacakge": "Сбой при извлечении скачанного пакета, ошибка: %s",
  "loc.messages.InstallingNuGetVersion": "Установка версии NuGet %s",
  "loc.messages.FailureWhileInstallingNuGetVersion": "Не удалось установить версию NuGet. Ошибка: %s",
  "loc.messages.SettingUpNugetProxySettings": "Настройка конфигурации прокси-сервера для NuGet.",
  "loc.messages.GlobalJsonFound": "Found a global.json at path: %s",
  "loc.messages.GlobalJsonSdkVersion": "SDK version: %s is specified by global.json at path: %s",
  "loc.messages.GlobalJsonIsEmpty": "global.json at path: %s is empty. No version is specified.",
  "loc.messages.FailedToFindGlobalJson": "Failed to find global.json at and inside path: %s",
  "loc.messages.FailedToReadGlobalJson": "The global.json at path: '%s' has the wrong format. For information about global.json, visit here: https://docs.microsoft.com/en-us/dotnet/core/tools/global-json. Error while trying to read: %s",
  "loc.messages.VersionNumberHasTheWrongFormat": "The version number: %s doesn't have the correct format. Versions can be given in the following formats: 2.x   => Install latest in major version. 2.2.x => Install latest in major and minor version. 2.2.104 => Install exact version. Find the value of `version` for installing SDK/Runtime, from the releases.json. The link to releases.json of that major.minor version can be found in [**releases-index file.**](https://dotnetcli.blob.core.windows.net/dotnet/release-metadata/releases-index.json). Like link to releases.json for 2.2 version is https://dotnetcli.blob.core.windows.net/dotnet/release-metadata/2.2/releases.json",
  "loc.messages.OnlyExplicitVersionAllowed": "Only explicit versions and accepted, such as: 2.2.301. Version: %s is not valid.",
  "loc.messages.SupportPhaseNotPresentInChannel": "support-phase is not present in the channel with channel-version %s."
}